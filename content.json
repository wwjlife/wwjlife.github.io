[{"title":"Markdown教程","date":"2017-01-07T07:38:21.000Z","path":"教程/Markdown教程/","text":"欢迎使用 Cmd Markdown 编辑阅读器 我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，Cmd Markdown 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown： 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载： Windows/Mac/Linux 全平台客户端 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 新文稿 或者使用快捷键 Ctrl+Alt+N。 什么是 MarkdownMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，粗体 或者 斜体 某些文字，更棒的是，它还可以 1. 制作一份待办事宜 Todo 列表 [ ] 支持以 PDF 格式导出文稿 [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 [x] 新增 Todo 列表功能 [x] 修复 LaTex 公式渲染问题 [x] 新增 LaTex 公式编号功能 2. 书写一个质能守恒公式[^LaTeX]$$E=mc^2$$ 3. 高亮一段代码[^code]1234567@requires_authorizationclass SomeClass: passif __name__ == '__main__': # A comment print 'hello world' 4. 高效绘制 流程图12345678st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 5. 高效绘制 序列图123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 6. 高效绘制 甘特图12345678910111213title 项目开发流程section 项目确定 需求分析 :a1, 2016-06-22, 3d 可行性报告 :after a1, 5d 概念验证 : 5dsection 项目实施 概要设计 :2016-07-05 , 5d 详细设计 :2016-07-08, 10d 编码 :2016-07-15, 10d 测试 :2016-07-22, 5dsection 发布验收 发布: 2d 验收: 3d 7. 绘制表格 项目 价格 数量 计算机 \\$1600 5 手机 \\$12 12 管线 \\$1 234 8. 更详细语法说明想要查看更详细的语法说明，可以参考我们准备的 Cmd Markdown 简明语法手册，进阶用户可以参考 Cmd Markdown 高阶语法手册 了解更多高级功能。 总而言之，不同于其它 所见即所得 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。 什么是 Cmd Markdown您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 编辑/发布/阅读 Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。 1. 实时同步预览我们将 Cmd Markdown 的主界面一分为二，左边为编辑区，右边为预览区，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！ 2. 编辑工具栏也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 编辑区 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。 3. 编辑模式完全心无旁骛的方式编辑文字：点击 编辑工具栏 最右侧的拉伸按钮或者按下 Ctrl + M，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！ 4. 实时的云端文稿为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 编辑工具栏 的最右侧提示 已保存 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。 5. 离线模式在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。 6. 管理工具栏为了便于管理您的文稿，在 预览区 的顶部放置了如下所示的 管理工具栏： 通过管理工具栏可以： 发布：将当前的文稿生成固定链接，在网络上发布，分享 新建：开始撰写一篇新的文稿 删除：删除当前的文稿 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地 列表：所有新增和过往的文稿都可以在这里查看、操作 模式：切换 普通/Vim/Emacs 编辑模式 7. 阅读工具栏 通过 预览区 右上角的 阅读工具栏，可以查看当前文稿的目录并增强阅读体验。 工具栏上的五个图标依次为： 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落 视图：互换左边编辑区和右边预览区的位置 主题：内置了黑白两种模式的主题，试试 黑色主题，超炫！ 阅读：心无旁骛的阅读模式提供超一流的阅读体验 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境 8. 阅读模式在 阅读工具栏 点击 或者按下 Ctrl+Alt+M 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。 9. 标签、分类和搜索在编辑区任意行首位置输入以下格式的文字可以标签当前文档： 标签： 未分类 标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示： 10. 文稿发布和分享在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 (Ctrl+Alt+P) 发布这份文档给好友吧！ 再一次感谢您花费时间阅读这份欢迎稿，点击 (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！ 作者 @ghosert2016 年 07月 07日 [^LaTeX]: 支持 LaTeX 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 MathJax 参考更多使用方法。 [^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，四十一种主流编程语言。","tags":[{"name":"随笔","slug":"随笔","permalink":"https://github.com/wwjlife/tags/随笔/"},{"name":"游记","slug":"游记","permalink":"https://github.com/wwjlife/tags/游记/"},{"name":"吃货","slug":"吃货","permalink":"https://github.com/wwjlife/tags/吃货/"},{"name":"教程","slug":"教程","permalink":"https://github.com/wwjlife/tags/教程/"},{"name":"小故事","slug":"小故事","permalink":"https://github.com/wwjlife/tags/小故事/"}]},{"title":"abd","date":"2017-01-07T07:38:21.000Z","path":"小故事/adb/","text":"abd: command not found.md 在Mac系统中，第一次在Android SDK中使用adb的时候回无法使用。提示-bash: abd: command not found。原因是：未配置Android的环境变量。因此，您需为Mac中的Android SDK配置环境变量。 启动Mac自带的终端Terminal。 进入当前用户的根目录。// 比如我的/Users/y*i/ 用vim打开「创建」.bash_profile文件。 输入export PATH=${PATH}:/Users/yi/Library/Android/sdk/platform-tools:/Users/yi/Library/Android/sdk/tools并保存就可以了 注意：如果需要添加多个路径到PATH下时，需要用“:”(英文的冒号)隔开。 更新刚配置的环境变量 在命令行中输入source .bash_profile 验证配置是否成功输入adb，如果没有出现-bash: adb: command not found；而出现adb的命令参数解释。则表明环境变量配置成功。 电脑重启以后adb命令就不能用了，需要touch 一下，怎么破 在.zshrc中添加一行：source ~/.bash_profile","tags":[{"name":"小故事","slug":"小故事","permalink":"https://github.com/wwjlife/tags/小故事/"},{"name":"bug","slug":"bug","permalink":"https://github.com/wwjlife/tags/bug/"},{"name":"android","slug":"android","permalink":"https://github.com/wwjlife/tags/android/"},{"name":"meteor","slug":"meteor","permalink":"https://github.com/wwjlife/tags/meteor/"}]},{"title":"File操作","date":"2015-12-16T07:38:21.000Z","path":"小故事/File操作/","text":"获取总根1234File[] fileList=File.listRoots(); //返回fileList.length为1 //fileList.getAbsolutePath()为\"/\" //这就是系统的总根 打开总根目录12345File file=new File(\"/\"); File[] fileList=file.listFiles(); //获取的目录中除了\"/sdcard\"和\"/system\"还有\"/data\"、\"/cache\"、\"/dev\"等//Android的根目录并不像Symbian系统那样分为C盘、D盘、E盘等 //Android是基于Linux的，只有目录，无所谓盘符 ###获取系统存储根目录 1234File file=Environment.getRootDirectory();//File file=new File(\"/system\"); File[] fileList=file.listFiles(); //这里说的系统仅仅指\"/system\" //不包括外部存储的手机存储的范围远远大于所谓的系统存储 ###获取SD卡存储根目录 123456File file=Environment.getExternalStorageDirectory();//File file=new File(\"/sdcard\"); File[] fileList=file.listFiles(); //要获取SD卡首先要确认SD卡是否装载 boolean is=Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED); //如果true，则已装载 //如果false，则未装载 ###获取data根目录 123File file=Environment.getDataDirectory();//File file=new File(\"/data\"); File[] fileList=file.listFiles(); //由于data文件夹是android里一个非常重要的文件夹，所以一般权限是无法获取到文件的，即fileList.length返回为0 ###获取私有文件路径 1234567Context context=this;//首先，在Activity里获取context File file=context.getFilesDir(); String path=file.getAbsolutePath(); //此处返回的路劲为/data/data/包/files，其中的包就是我们建立的主Activity所在的包 //我们可以看到这个路径也是在data文件夹下 //程序本身是可以对自己的私有文件进行操作 //程序中很多私有的数据会写入到私有文件路径下，这也是android为什么对data数据做保护的原因之一 ###获取文件（夹）绝对路径、相对路劲、文件（夹）名、父目录 12345File file=…… String relativePath=file.getPath();//相对路径 String absolutePath=file.getAbsolutePath();//绝对路径 String fileName=file.getName();//文件（夹）名 String parentPath=file.getParent();//父目录 ###列出文件夹下的所有文件和文件夹 12File file=…… File[] fileList=file.listFiles(); ###判断是文件还是文件夹 12File file=…… boolean is=file.isDirectory();//true-是，false-否 ###判断文件（夹）是否存在 12File file=…… boolean is=file.exists();//true-是，false-否 ###新建文件（夹） 1234567891011121314151617181920212223File file=…… oolean is=file.isDirectory();//判断是否为文件夹 /*方法1*/ if(is)&#123; String path=file.getAbsolutePath(); String name=\"ABC\";//你要新建的文件夹名或者文件名 String pathx=path+name; File filex=new File(pathx); boolean is=filex.exists();//判断文件（夹）是否存在 if(!is)&#123; filex.mkdir();//创建文件夹 //filex.createNewFile();//创建文件 &#125; /*方法2*/ if(is)&#123; String path=file.getAbsolutePath(); String name=\"test.txt\";//你要新建的文件夹名或者文件名 File filex=new File(path,name);//方法1和方法2的区别在于此 boolean is=filex.exists();//判断文件（夹）是否存在 if(!is)&#123; filex.mkdir();//创建文件夹 //filex.createNewFile();//创建文件 &#125; ###重命名文件（夹） 12345File file=…… String parentPath=file.getParent(); String newName=\"name\";//重命名后的文件或者文件夹名 File filex=new File(parentPath,newName);//File filex=new File(parentPaht+newName) file.renameTo(filex); ###删除文件（夹） 123File file=…… file.delete();//立即删除 //file.deleteOnExit();//程序退出后删除，只有正常退出才会删除 原地址：Android入门之文件系统操作（二）文件操作相关指令 ###view plainprint? Android 2.3提供一个称为严苛模式（StrictMode）的调试特性 唯一一篇讲到在2.3之前要怎么处理的文章","tags":[{"name":"File","slug":"File","permalink":"https://github.com/wwjlife/tags/File/"},{"name":"Android","slug":"Android","permalink":"https://github.com/wwjlife/tags/Android/"}]}]